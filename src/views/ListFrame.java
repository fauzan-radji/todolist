/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package views;

import com.db4o.ObjectContainer;
import controllers.ContainerController;
import controllers.TodoController;
import java.util.ArrayList;
import java.util.List;
import javax.swing.GroupLayout.ParallelGroup;
import javax.swing.GroupLayout.SequentialGroup;
import javax.swing.JCheckBox;
import javax.swing.JLabel;
import models.Container;
import models.Todo;

/**
 *
 * @author fauzan-radji
 */
public class ListFrame extends javax.swing.JFrame {

  Container container;
  TodoController todoController;
  ContainerController containerController;
  List<Todo> todos;
  JLabel emptyLabel;
  javax.swing.GroupLayout panelUndoneLayout;
  ParallelGroup parallelGroup;
  SequentialGroup sequentialGroup;

  /**
   * Creates new form ListFrame
   */
  public ListFrame(Container container, ObjectContainer db) {
    this.container = container;
    this.todoController = new TodoController(db);
    this.containerController = new ContainerController(db);

    todos = todoController.getByContainerId(container.getId());
    emptyLabel = new JLabel("Belum ada task");
    emptyLabel.setVisible(true);

    initComponents();
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {
    buttonKembali = new javax.swing.JButton();
    panelUndone = new javax.swing.JPanel();
    textTask = new javax.swing.JTextField();
    textId = new javax.swing.JTextField();
    buttonTambah = new javax.swing.JButton();
    buttonHapus = new javax.swing.JButton();
    List<JCheckBox> checkBoxes = new ArrayList<>();
    if (todos != null) {
      for (Todo todo : todos) {
        checkBoxes.add(initCheckboxes(todo));
      }
    }

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

    buttonKembali.setText("Kembali");
    buttonKembali.addActionListener(
      new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
          buttonKembaliActionPerformed(evt);
        }
      }
    );

    panelUndone.setBorder(
      new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true)
    );

    panelUndoneLayout = new javax.swing.GroupLayout(panelUndone);
    panelUndone.setLayout(panelUndoneLayout);
    parallelGroup =
      panelUndoneLayout.createParallelGroup(
        javax.swing.GroupLayout.Alignment.LEADING
      );
    if (checkBoxes.isEmpty()) {
      parallelGroup.addComponent(emptyLabel);
    } else {
      for (JCheckBox checkbox : checkBoxes) {
        parallelGroup.addComponent(checkbox);
      }
    }
    panelUndoneLayout.setHorizontalGroup(
      panelUndoneLayout
        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(
          panelUndoneLayout
            .createSequentialGroup()
            .addContainerGap()
            .addGroup(parallelGroup)
            .addContainerGap(
              javax.swing.GroupLayout.DEFAULT_SIZE,
              Short.MAX_VALUE
            )
        )
    );
    sequentialGroup =
      panelUndoneLayout.createSequentialGroup().addContainerGap();
    if (checkBoxes.isEmpty()) {
      sequentialGroup
        .addComponent(emptyLabel)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED);
    } else {
      for (JCheckBox checkbox : checkBoxes) {
        sequentialGroup
          .addComponent(checkbox)
          .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED);
      }
    }
    panelUndoneLayout.setVerticalGroup(
      panelUndoneLayout
        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(
          sequentialGroup.addContainerGap(72, Short.MAX_VALUE) // .addComponent(jCheckBox8) // .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED) // .addComponent(jCheckBox7) // .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED) // .addComponent(jCheckBox6) // .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED) // .addComponent(jCheckBox5) // .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED) // .addComponent(jCheckBox4) // .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED) // .addComponent(jCheckBox3) // .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED) // .addComponent(jCheckBox2)
        )
    );

    textTask.setText("");
    textId.setText("");

    buttonTambah.setText("Tambah");
    buttonTambah.addActionListener(
      new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
          buttonTambahActionPerformed(evt);
        }
      }
    );

    buttonHapus.setText("Hapus");
    buttonHapus.addActionListener(
      new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
          buttonHapusActionPerformed(evt);
        }
      }
    );

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(
      getContentPane()
    );
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout
        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(
          layout
            .createSequentialGroup()
            .addContainerGap()
            .addGroup(
              layout
                .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(
                  panelUndone,
                  javax.swing.GroupLayout.DEFAULT_SIZE,
                  javax.swing.GroupLayout.DEFAULT_SIZE,
                  Short.MAX_VALUE
                )
                .addGroup(
                  javax.swing.GroupLayout.Alignment.TRAILING,
                  layout
                    .createSequentialGroup()
                    .addComponent(
                      textId,
                      javax.swing.GroupLayout.DEFAULT_SIZE,
                      javax.swing.GroupLayout.DEFAULT_SIZE,
                      Short.MAX_VALUE
                    )
                    .addPreferredGap(
                      javax.swing.LayoutStyle.ComponentPlacement.RELATED
                    )
                    .addComponent(
                      textTask,
                      javax.swing.GroupLayout.DEFAULT_SIZE,
                      350,
                      Short.MAX_VALUE
                    )
                    .addPreferredGap(
                      javax.swing.LayoutStyle.ComponentPlacement.RELATED
                    )
                    .addComponent(buttonTambah)
                )
                .addGroup(
                  javax.swing.GroupLayout.Alignment.TRAILING,
                  layout
                    .createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(buttonKembali)
                    .addPreferredGap(
                      javax.swing.LayoutStyle.ComponentPlacement.RELATED
                    )
                    .addComponent(buttonHapus)
                )
            )
            .addContainerGap()
        )
    );
    layout.setVerticalGroup(
      layout
        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(
          layout
            .createSequentialGroup()
            .addContainerGap()
            .addComponent(
              panelUndone,
              javax.swing.GroupLayout.PREFERRED_SIZE,
              javax.swing.GroupLayout.DEFAULT_SIZE,
              javax.swing.GroupLayout.PREFERRED_SIZE
            )
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(
              layout
                .createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(
                  textId,
                  javax.swing.GroupLayout.PREFERRED_SIZE,
                  javax.swing.GroupLayout.DEFAULT_SIZE,
                  javax.swing.GroupLayout.PREFERRED_SIZE
                )
                .addComponent(
                  textTask,
                  javax.swing.GroupLayout.PREFERRED_SIZE,
                  javax.swing.GroupLayout.DEFAULT_SIZE,
                  javax.swing.GroupLayout.PREFERRED_SIZE
                )
                .addComponent(buttonTambah)
            )
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(
              layout
                .createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(buttonKembali)
                .addComponent(buttonHapus)
            )
            // .addComponent(buttonKembali)
            // .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            // .addComponent(buttonHapus)
            .addContainerGap(
              javax.swing.GroupLayout.DEFAULT_SIZE,
              Short.MAX_VALUE
            )
        )
    );

    pack();
  } // </editor-fold>//GEN-END:initComponents

  private JCheckBox initCheckboxes(Todo todo) {
    JCheckBox checkbox = new JCheckBox();

    if (todo.getDone()) checkbox.setSelected(true);
    checkbox.setText(todo.getTask());

    return checkbox;
  }

  private void reGenerateTodo() {
    todos = todoController.getByContainerId(container.getId());

    List<JCheckBox> checkBoxes = new ArrayList<>();
    if (todos != null) {
      for (Todo todo : todos) {
        checkBoxes.add(initCheckboxes(todo));
      }
    }

    if (checkBoxes.isEmpty()) {
      parallelGroup.addComponent(emptyLabel);
    } else {
      for (JCheckBox checkbox : checkBoxes) {
        parallelGroup.addComponent(checkbox);
      }
    }

    if (checkBoxes.isEmpty()) {
      sequentialGroup
        .addComponent(emptyLabel)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED);
    } else {
      for (JCheckBox checkbox : checkBoxes) {
        sequentialGroup
          .addComponent(checkbox)
          .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED);
      }
    }
  }

  private void buttonKembaliActionPerformed(java.awt.event.ActionEvent evt) {
    // TODO add your handling code here:
    // addTodoInternalFrame.setVisible(true);
    setVisible(false);
  }

  private void buttonTambahActionPerformed(java.awt.event.ActionEvent evt) {
    // TODO add your handling code here:
    // addTodoInternalFrame.setVisible(true);
    System.out.println("Button Tambah clicked");
    todoController.insert(
      new Todo(textId.getText(), textTask.getText(), container)
    );

    reGenerateTodo();
  }

  private void buttonHapusActionPerformed(java.awt.event.ActionEvent evt) {
    // TODO add your handling code here:
    // addTodoInternalFrame.setVisible(true);
    System.out.println("Button Tambah clicked");
    containerController.delete(container.getId());

    reGenerateTodo();
  }

  /**
   * @param args the command line arguments
   */
  public static void main(String args[]) {
    /* Set the Nimbus look and feel */
    //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
    /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
     * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
     */
    try {
      for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
        if ("Nimbus".equals(info.getName())) {
          javax.swing.UIManager.setLookAndFeel(info.getClassName());
          break;
        }
      }
    } catch (ClassNotFoundException ex) {
      java.util.logging.Logger
        .getLogger(ListFrame.class.getName())
        .log(java.util.logging.Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
      java.util.logging.Logger
        .getLogger(ListFrame.class.getName())
        .log(java.util.logging.Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
      java.util.logging.Logger
        .getLogger(ListFrame.class.getName())
        .log(java.util.logging.Level.SEVERE, null, ex);
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
      java.util.logging.Logger
        .getLogger(ListFrame.class.getName())
        .log(java.util.logging.Level.SEVERE, null, ex);
    }
    //</editor-fold>

    /* Create and display the form */
    java.awt.EventQueue.invokeLater(
      new Runnable() {
        public void run() {
          new ListFrame().setVisible(true);
        }
      }
    );
  }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton buttonKembali;
  private javax.swing.JButton buttonHapus;
  private javax.swing.JButton buttonTambah;
  private javax.swing.JTextField textTask;
  private javax.swing.JTextField textId;
  private javax.swing.JPanel panelUndone;
  // End of variables declaration//GEN-END:variables
}
